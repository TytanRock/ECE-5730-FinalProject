library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity FIFO is
generic (num integer := 32);
port ( complete : in std_logic;
	data_in : in std_logic_vector(7 downto 0);
	pop : in std_logic;
        data_out : out std_logic_vector (7 downto 0));
end FIFO;

architecture behavior of FIFO is

type fifo_size is array (o to num) of std_logic_vector (7 downto 0);
signal mem : fifo_size;
signal ind : integer <=-1
signal start,i : integer <=0;

begin
   process(complete)
   
   begin
    ind++
    if (complete'event and complete=1) then
     if(ind = num) then
      ind=0;
      mem(ind)<=data_in(7 downto 0);
      else
      mem(ind)<=data_in(7 downto 0);
     end if;
    end if;
   end process;
    process(pop)
    begin
     data_out(7 downto 0) <= mem(start);
     for i in 0 to ind-1 loop
      mem(i)<=mem(i+1);
     end loop;
    ind--;
    end process;
end;
 
      
    


